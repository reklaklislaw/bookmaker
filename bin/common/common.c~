#ifndef _COMMON_C_
#define _COMMON_C_

#include "constants.h"
#include "common.h"


struct corners* getCornersFromFile(char *file, 
				   float skewAngle) {
  
  FILE *corner_file = fopen(file, "r");
  fpos_t pos;
  int c;
  struct corners *corners;
  corners->num_corners = 0;
  while((c=fgetc(corner_file))!=EOF) {
    if (c == '\n')
      corners->num_corners++;
  }
  //if (corners->num_corners < 1)
  //  return 0;
  fsetpos(corner_file,&pos);

  corners->x = (unsigned short int *) malloc(sizeof(unsigned short int)*num_corners);   
  corners->y = (unsigned short int *) malloc(sizeof(unsigned short int)*num_corners);   
  
  int i, retVal;
  for (i=0;i<corners->num_corners;i++) {
    retVal = fscanf(corner_file,"%d %d\n", &corners->x[i], &corners->y[i]);

    if (skewAngle!=0.0) {
      corners->x[i] = (unsigned short int) (((corners->x[i] - mx) * cosf(DEG2RAD(skewAngle)) ) -  
					    ((corners->y[i] - my) * sinf(DEG2RAD(skewAngle)) ) + mx);
      corners->y[i] = (unsigned short int) (((corners->x[i] - mx) * sinf(DEG2RAD(skewAngle)) ) +  
					    ((corners->y[i] - my) * cosf(DEG2RAD(skewAngle)) ) + my);
    } 

  return corners;
}


void runFastDetector9(PIX *pix,
		      int w, int h,
		      xy *corners,
		      int *num_corners) {
  
  unsigned char *im = (unsigned char*) malloc(sizeof(unsigned char) * (w*h));
  void **pix_lines = pixGetLinePtrs(pix, NULL);
  int x,y;
  int i = 0;
  for(y=0;y<h;y++) 
    for(x=0;x<w;x++){
      im[i] = (unsigned char) GET_DATA_BYTE(pix_lines[y],x);
      i++;
    }
  
  corners = fast9_detect(im, w, h, w, 44, num_corners);
  
  //for (i=0; i<*num_corners;i++)
  //  printf("%d %d\n", corners[i].x, corners[i].y);
  //printf("number of corners:%d\n", *num_corners);
}



#endif
